<<<<<<< Updated upstream
coord_map() +
blank_theme
black_white_ratio_map
# Load dataset from the Vera Institute
incarceration <- read.csv("https://raw.githubusercontent.com/vera-institute/incarceration-trends/master/incarceration_trends.csv")
# Load shapefile of US counties
county_shape <- map_data("county")
View(county_shape)
# Create blank map of the US
usa_plot <- ggplot(data = county_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group),
color = "white",
size = .1
) +
coord_map()
usa_plot
# Blank theme
blank_theme <- theme_bw() +
theme(
axis.line = element_blank(), # remove axis lines
axis.text = element_blank(), # remove axis labels
axis.ticks = element_blank(), # remove axis ticks
axis.title = element_blank(), # remove axis titles
plot.background = element_blank(), # remove gray background
panel.grid.major = element_blank(), # remove major grid lines
panel.grid.minor = element_blank(), # remove minor grid lines
panel.border = element_blank() # remove border around plot
)
# Create blank map of the US
usa_plot <- ggplot(data = county_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group),
color = "white",
size = .1
) +
coord_map() +
blank_theme
usa_plot
# Pull total jail and prison populations and census region
arrest_area <- incarceration %>%
select(year, region, total_jail_pop, total_prison_pop) %>%
filter(year == max(year)) %>%
group_by(year) %>%
mutate(total_incarceration_pop = (total_prison_pop + total_jail_pop)) %>%
arrange(region)
View(arrest_area)
# Convert NA values to 0
incarceration[is.na(incarceration)] = 0
View(arrest_area)
# Convert NA values to 0
incarceration[is.na(incarceration)] = 0
# Pull total jail and prison populations and census region
arrest_area <- incarceration %>%
select(year, region, total_jail_pop, total_prison_pop) %>%
filter(year == max(year)) %>%
group_by(year) %>%
mutate(total_incarceration_pop = (total_prison_pop + total_jail_pop)) %>%
arrange(region)
View(arrest_area)
# Pull total jail and prison populations and census region
arrest_area <- incarceration %>%
select(year, county_name, state, region, total_jail_pop, total_prison_pop) %>%
filter(year == max(year)) %>%
group_by(year) %>%
mutate(total_incarceration_pop = (total_prison_pop + total_jail_pop)) %>%
arrange(region)
# Convert NA values to 0
incarceration[is.na(incarceration)] = 0
# Pull total jail and prison populations and census region
arrest_area <- incarceration %>%
select(year, county_name, state, region, total_jail_pop, total_prison_pop) %>%
filter(year == max(year)) %>%
group_by(year) %>%
mutate(total_incarceration_pop = (total_prison_pop + total_jail_pop)) %>%
arrange(region)
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
filter(region == "Southern")
View(southern_incarceration)
View(arrest_area)
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
filter(region == "South")
View(southern_incarceration)
View(county_shape)
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
filter(region == "South") %>%
mutate(county = tolower(county_name))
View(southern_incarceration)
?gsub
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
filter(region == "South") %>%
mutate(county = tolower(county_name)) %>%
mutate(county = gsub("county", "", county))
View(southern_incarceration)
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
filter(region == "South") %>%
mutate(county = tolower(gsub("county", "", county_name)))
View(southern_incarceration)
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
filter(region == "South") %>%
mutate(county = tolower(county_name)) %>%
mutate(county = gsub("county", "", county))
View(southern_incarceration)
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
left_join(southern_incarceration, by = "county")
View(county_shape)
# Load incarceration data by southern counties
county_shape <- map_data("county")
View(county_shape)
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(region = county)
View(county_shape)
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(subregion = county)
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(county = subregion)
View(county_shape)
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(county = subregion) %>%
left_join(southern_incarceration, by = "county")
View(county_shape)
View(arrest_area)
View(southern_incarceration)
View(county_shape)
# Load dataset from the Vera Institute
incarceration <- read.csv("https://raw.githubusercontent.com/vera-institute/incarceration-trends/master/incarceration_trends.csv")
# Convert NA values to 0
incarceration[is.na(incarceration)] = 0
# Pull total jail and prison populations and census region
arrest_area <- incarceration %>%
select(year, county_name, state, region, total_jail_pop, total_prison_pop) %>%
filter(year == max(year)) %>%
group_by(year) %>%
mutate(total_incarceration_pop = (total_prison_pop + total_jail_pop)) %>%
arrange(region)
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
filter(region == "South") %>%
mutate(county = tolower(county_name)) %>%
mutate(county = gsub("county", "", county))
View(southern_incarceration)
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(county = subregion) %>%
left_join(southern_incarceration, by = "county")
View(southern_incarceration)
# Blank theme
blank_theme <- theme_bw() +
theme(
axis.line = element_blank(), # remove axis lines
axis.text = element_blank(), # remove axis labels
axis.ticks = element_blank(), # remove axis ticks
axis.title = element_blank(), # remove axis titles
plot.background = element_blank(), # remove gray background
panel.grid.major = element_blank(), # remove major grid lines
panel.grid.minor = element_blank(), # remove minor grid lines
panel.border = element_blank() # remove border around plot
)
blank_theme
southern_jail_plot
# Create blank map of the US
southern_jail_plot <- ggplot(data = county_shape) +
geom_polygon(mapping = aes(x = long, y = lat, group = group,
fill = total_incarceration_pop, color = "white", size = .1)) +
coord_map() +
scale_fill_continuous(low = "#fee8c8", high = "#e34a33") +
labs(fill = "Total Incarcerated Population") +
blank_theme
southern_jail_plot
View(county_shape)
# Map Code
incarceration[is.na(incarceration)] = 0
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
filter(region == "South") %>%
mutate(county = tolower(county_name)) %>%
mutate(county = gsub("county", "", county))
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(county = subregion) %>%
left_join(southern_incarceration, by = "county")
# Blank theme
blank_theme <- theme_bw() +
theme(
axis.line = element_blank(), # remove axis lines
axis.text = element_blank(), # remove axis labels
axis.ticks = element_blank(), # remove axis ticks
axis.title = element_blank(), # remove axis titles
plot.background = element_blank(), # remove gray background
panel.grid.major = element_blank(), # remove major grid lines
panel.grid.minor = element_blank(), # remove minor grid lines
panel.border = element_blank() # remove border around plot
)
# Create blank map of the US
southern_jail_plot <- ggplot(data = county_shape) +
geom_polygon(mapping = aes(x = long, y = lat, group = group,
fill = total_incarceration_pop, color = "white", size = .1)) +
coord_map() +
scale_fill_continuous(low = "#fee8c8", high = "#e34a33") +
labs(fill = "Total Incarcerated Population") +
blank_theme
southern_jail_plot
# Create blank map of the US
southern_jail_plot <- ggplot(data = county_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group,
fill = total_incarceration_pop),
color = "white",
size = .1
) +
coord_map() +
scale_fill_continuous(low = "#fee8c8", high = "#e34a33") +
labs(fill = "Total Incarcerated Population") +
blank_theme
southern_jail_plot
# Create blank map of the US
southern_jail_plot <- ggplot(data = county_shape) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group,
fill = total_incarceration_pop),
color = "white",
size = .1
) +
coord_map() +
scale_fill_continuous(low = "#fee8c8", high = "Red") +
labs(fill = "Total Incarcerated Population") +
blank_theme
southern_jail_plot
View(southern_incarceration)
# Map Code Example
library("maps")
library("mapproj")
library("patchwork")
incarceration <- read.csv("https://raw.githubusercontent.com/vera-institute/incarceration-trends/master/incarceration_trends.csv")
# Map Code
incarceration[is.na(incarceration)] = 0
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
filter(region == "South") %>%
mutate(county = tolower(county_name)) %>%
mutate(county = gsub("county", "", county))
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(county = subregion) %>%
left_join(southern_incarceration, by = "county")
# Blank theme
blank_theme <- theme_bw() +
theme(
axis.line = element_blank(), # remove axis lines
axis.text = element_blank(), # remove axis labels
axis.ticks = element_blank(), # remove axis ticks
axis.title = element_blank(), # remove axis titles
plot.background = element_blank(), # remove gray background
panel.grid.major = element_blank(), # remove major grid lines
panel.grid.minor = element_blank(), # remove minor grid lines
panel.border = element_blank() # remove border around plot
)
# Create blank map of the US
southern_jail_plot <- ggplot(data = county_shape) +
geom_polygon(
aes(x = long, y = lat, group = group, fill = total_incarceration_pop)
) +
coord_map() +
blank_theme
southern_jail_plot
View(southern_incarceration)
View(southern_jail_plot)
View(county_shape)
# Load dataset from the Vera Institute
incarceration <- read.csv("https://raw.githubusercontent.com/vera-institute/incarceration-trends/master/incarceration_trends.csv")
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
arrest_area[is.na(arrest_area)] %>%
filter(region == "South") %>%
mutate(county = tolower(county_name)) %>%
mutate(county = gsub("county", "", county))
# Pull total jail and prison populations and census region
arrest_area <- incarceration %>%
select(year, county_name, state, region, total_jail_pop, total_prison_pop) %>%
filter(year == max(year)) %>%
group_by(year) %>%
mutate(total_incarceration_pop = (total_prison_pop + total_jail_pop)) %>%
arrange(region)
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
arrest_area[is.na(arrest_area)] %>%
filter(region == "South") %>%
mutate(county = tolower(county_name)) %>%
mutate(county = gsub("county", "", county))
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
arrest_area[is.na(arrest_area)] = 0 %>%
filter(region == "South") %>%
mutate(county = tolower(county_name)) %>%
mutate(county = gsub("county", "", county))
# Load dataset from the Vera Institute
incarceration <- read.csv("https://raw.githubusercontent.com/vera-institute/incarceration-trends/master/incarceration_trends.csv")
# Pull total jail and prison populations and census region
arrest_area_pre <- incarceration %>%
select(year, county_name, state, region, total_jail_pop, total_prison_pop) %>%
filter(year == max(year)) %>%
group_by(year) %>%
mutate(total_incarceration_pop = (total_prison_pop + total_jail_pop)) %>%
arrange(region)
arrest_area <- arrest_area[is.na(arrest_area)] = 0
arrest_area <- arrest_area_pre[is.na(arrest_area_pre)] = 0
arrest_area_pre[is.na(arrest_area_pre)] = 0
View(arrest_area_pre)
test <- arrest_area_pre[is.na(arrest_area_pre)] = 0
# Pull total jail and prison populations and census region
arrest_area <- incarceration %>%
select(year, county_name, state, region, total_jail_pop, total_prison_pop) %>%
filter(year == max(year)) %>%
group_by(year) %>%
mutate(total_incarceration_pop = (total_prison_pop + total_jail_pop)) %>%
arrange(region)
arrest_area <-arrest_area[is.na(arrest_area)] = 0
arrest_area <- arrest_area[is.na(arrest_area)] = 0
# Load dataset from the Vera Institute
incarceration <- read.csv("https://raw.githubusercontent.com/vera-institute/incarceration-trends/master/incarceration_trends.csv")
# Convert NA values to 0
incarceration[is.na(incarceration)] = 0
# Convert NA values to 0
incarceration[is.na(incarceration)] = 0
# Pull total jail and prison populations and census region
arrest_area <- incarceration %>%
select(year, county_name, state, region, total_jail_pop, total_prison_pop) %>%
filter(year == max(year)) %>%
group_by(year) %>%
mutate(total_incarceration_pop = (total_prison_pop + total_jail_pop)) %>%
arrange(region)
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
filter(region == "South") %>%
mutate(county = tolower(county_name)) %>%
mutate(county = gsub("county", "", county))
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(county = subregion) %>%
left_join(southern_incarceration, by = "county")
View(county_shape)
# Convert NA values to 0
incarceration[is.na(incarceration)] = 0
# Pull total jail and prison populations and census region
arrest_area <- incarceration %>%
select(year, county_name, state, region, total_jail_pop, total_prison_pop) %>%
filter(year == max(year)) %>%
group_by(year) %>%
mutate(total_incarceration_pop = (total_prison_pop + total_jail_pop)) %>%
arrange(region)
View(arrest_area)
#  Of total incarcerated individuals by census region
region_plot <- ggplot(data = arrest_area) +
geom_col(aes(x = total_incarceration_pop, y = region, fill = region)) +
labs(title = "Individuals Incarcerated by Census Region as of 2018",
x = "Total Incarceration Population",
y = "Census Region") +
coord_flip()
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
filter(region == "South") %>%
mutate(county = tolower(county_name)) %>%
mutate(county = gsub("county", "", county))
View(southern_incarceration)
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(county = subregion) %>%
left_join(southern_incarceration, by = "county")
View(county_shape)
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
mutate(county = tolower(county_name)) %>%
mutate(county = gsub("county", "", county))
View(southern_incarceration)
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(county = subregion) %>%
left_join(southern_incarceration, by = "county")
View(county_shape)
View(county_shape)
incarceration <- read.csv("https://raw.githubusercontent.com/vera-institute/incarceration-trends/master/incarceration_trends.csv")
sample_data <- incarceration %>%
select(black_jail_pop_rate, white_jail_pop_rate, white_prison_pop_rate,
total_prison_pop_rate, total_jail_pop_rate, year, fips, state, county_name) %>%
mutate(black_white_ratio = black_jail_pop_rate / white_jail_pop_rate)  %>%
filter(year == 2018)
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
# Load dataset from the Vera Institute
incarceration <- read.csv("https://raw.githubusercontent.com/vera-institute/incarceration-trends/master/incarceration_trends.csv")
# Load dataset from the Vera Institute
incarceration <- read.csv("https://raw.githubusercontent.com/vera-institute/incarceration-trends/master/incarceration_trends.csv")
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
# Pull total jail and prison populations and census region
arrest_area <- incarceration %>%
select(year, county_name, state, region, total_jail_pop, total_prison_pop) %>%
filter(year == max(year)) %>%
group_by(year) %>%
mutate(total_incarceration_pop = sum(total_prison_pop, total_jail_pop, na.rm = T)) %>%
arrange(region)
# Pull total jail and prison populations and census region
arrest_area <- incarceration %>%
select(year, county_name, state, region, total_jail_pop, total_prison_pop) %>%
filter(year == max(year)) %>%
group_by(year) %>%
mutate(total_incarceration_pop = sum(total_prison_pop, total_jail_pop, na.rm = T)) %>%
arrange(region)
View(arrest_area)
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
# Load respective packages
library("tidyverse")
library("ggpubr")
library("maps")
library("mapproj")
library("patchwork")
# Load dataset from the Vera Institute
incarceration <- read.csv("https://raw.githubusercontent.com/vera-institute/incarceration-trends/master/incarceration_trends.csv")
# Pull total jail and prison populations and census region
arrest_area <- incarceration %>%
select(year, county_name, state, region, total_jail_pop, total_prison_pop) %>%
filter(year == max(year)) %>%
group_by(year) %>%
mutate(total_incarceration_pop = sum(total_prison_pop, total_jail_pop, na.rm = T)) %>%
arrange(region)
View(arrest_area)
# Pull total jail and prison populations and census region
arrest_area <- incarceration %>%
select(year, county_name, state, region, total_jail_pop, total_prison_pop) %>%
filter(year == max(year)) %>%
group_by(year) %>%
rowwise() %>%
mutate(total_incarceration_pop = sum(total_prison_pop, total_jail_pop, na.rm = T)) %>%
arrange(region)
View(arrest_area)
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
#  Of total incarcerated individuals by census region
region_plot <- ggplot(data = arrest_area) +
geom_col(aes(x = total_incarceration_pop, y = region, fill = region)) +
labs(title = "Individuals Incarcerated by Census Region as of 2018",
x = "Total Incarceration Population",
y = "Census Region") +
coord_flip()
#  Of total incarcerated individuals by census region
region_plot <- ggplot(data = arrest_area) +
geom_col(aes(x = total_incarceration_pop, y = region, fill = region)) +
labs(title = "Individuals Incarcerated by Census Region as of 2018",
x = "Total Incarceration Population",
y = "Census Region") +
coord_flip()
region_plot
# Load southern region incarceration data
southern_incarceration <- arrest_area %>%
mutate(county = tolower(county_name)) %>%
mutate(county = gsub("county", "", county))
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(county = subregion) %>%
left_join(southern_incarceration, by = "county")
View(county_shape)
View(southern_incarceration)
View(southern_incarceration)
View(county_shape)
view(map_data("county"))
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(county = subregion, state = region) %>%
left_join(southern_incarceration, by = "county")
View(county_shape)
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(county = subregion, state = region) %>%
left_join(southern_incarceration, by = "county")
# Load southern region incarceration data
southern_incarceration <- arrest_area %>% # Sample data
mutate(county = tolower(county_name)) %>%
mutate(county = gsub("county", "", county))
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(county = subregion, state = region) %>%
left_join(southern_incarceration, by = "county")
View(southern_incarceration)
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(county = subregion, state = region) %>%
left_join(arrest_area, by = "county")
# Load incarceration data by southern counties
county_shape <- map_data("county") %>%
rename(county = subregion, state = region) %>%
left_join(southern_incarceration, by = "county")
View(southern_incarceration)
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
source('~/Desktop/INFO/Assignments/a3-GrahamFulton2/analysis.R')
setwd("~/Desktop/INFO/info201-project")
=======
x <- 6
load("~/Documents/INFO201/a1-darshils2001/analysis.R")
load("~/Documents/INFO201/a1-darshils2001/analysis.R")
load("~/Documents/INFO201/a1-darshils2001/analysis.R")
ls
load("~/Documents/INFO201/a1-darshils2001/analysis.R")
load("~/Documents/INFO201/a1-darshils2001/analysis.R")
# Load the `nycflights13` package to access the `flights` data frame
install.packages("nycflights13") # once per machine
library("nycflights13")
# Identify the destination where flights, on average, arrive most early
most_early <- flights %>%
group_by(dest) %>% # group by destination
summarize(delay = mean(arr_delay, na.rm = TRUE)) %>% # compute mean delay
filter(delay == min(delay, na.rm = TRUE)) %>% # filter for least delayed
select(dest, delay) %>% # select the destination (and delay to store it)
left_join(airports, by = c("dest" = "faa")) %>% # join on `airports` data
select(dest, name, delay) # select output variables of interest
install.packages("dplyr") # once per machine
library("dplyr")
# Load the `nycflights13` package to access the `flights` data frame
install.packages("nycflights13") # once per machine
library("nycflights13")
# Identify the destination where flights, on average, arrive most early
most_early <- flights %>%
group_by(dest) %>% # group by destination
summarize(delay = mean(arr_delay, na.rm = TRUE)) %>% # compute mean delay
filter(delay == min(delay, na.rm = TRUE)) %>% # filter for least delayed
select(dest, delay) %>% # select the destination (and delay to store it)
left_join(airports, by = c("dest" = "faa")) %>% # join on `airports` data
select(dest, name, delay) # select output variables of interest
install.packages("nycflights13")
# Identify the destination where flights, on average, arrive most early
most_early <- flights %>%
group_by(dest) %>% # group by destination
summarize(delay = mean(arr_delay, na.rm = TRUE)) %>% # compute mean delay
filter(delay == min(delay, na.rm = TRUE)) %>% # filter for least delayed
select(dest, delay) %>% # select the destination (and delay to store it)
left_join(airports, by = c("dest" = "faa")) %>% # join on `airports` data
select(dest, name, delay) # select output variables of interest
library("dplyr")
library("nycflights13")
# Identify the destination where flights, on average, arrive most early
most_early <- flights %>%
group_by(dest) %>% # group by destination
summarize(delay = mean(arr_delay, na.rm = TRUE)) %>% # compute mean delay
filter(delay == min(delay, na.rm = TRUE)) %>% # filter for least delayed
select(dest, delay) %>% # select the destination (and delay to store it)
left_join(airports, by = c("dest" = "faa")) %>% # join on `airports` data
select(dest, name, delay) # select output variables of interest
print(most_early)
most_early <- flights %>%
group_by(dest) %>% # group by destination
summarize(delay = mean(arr_delay, na.rm = TRUE)) %>% # compute mean delay
filter(delay == max(delay, na.rm = TRUE)) %>% # filter for least delayed
select(dest, delay) %>% # select the destination (and delay to store it)
left_join(airports, by = c("dest" = "faa")) %>% # join on `airports` data
select(dest, name, delay) # select output variables of interest
print(most_early)
---
title: "Info 201 Project"
output: html_document
---
# Introduction
## Charts
## Chart 1 (Sector Bar Chart):
```{r}
source(Sector_Bar_Chart.R)
```
# Introduction
## Charts
## Chart 1 (Sector Bar Chart):
```{r}
source("Sector_Bar_Chart.R")
```
setwd("~/Documents/INFO201/info201-project")
lintr
library(lintr)
library(styler)
lintr("Index.Rmd")
lint("Index.Rmd")
# Load Packages
library("readxl")
library("ggplot2")
library("tidyverse")
# Load Dataset
sectors <- read_excel("info201-project/datasets/National_Sector_Dataset.xls")
# Convert Sector Numbers to Names
sectors$NAICS_SECTOR <- gsub(11, "Agriculture", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(21, "Mining", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(22, "Utilities", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(23, "Construction", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(31, "Manufacturing", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(42, "Wholesale Trade", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(44, "Retail Trade", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(48, "Transportation", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(51, "Information", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(52, "Finance", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(53, "Real Estate", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(54, "Professional Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(55, "Management", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(56, "Waste Management", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(61, "Educational Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(62, "Health Care", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(71, "Arts", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(72, "Food Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(81, "Other Services", sectors$NAICS_SECTOR)
# Filter to 5 randomly selected sectors
random_sectors <- sectors %>%
filter(NAICS_SECTOR == "Health Care" | NAICS_SECTOR == "Arts" |
NAICS_SECTOR == "Management" | NAICS_SECTOR == "Utilities" |
NAICS_SECTOR == "Other Services")
# Find average % in each sector
random_sectors$ESTIMATE_PERCENTAGE <- as.numeric(
gsub("[\\%,]", "", random_sectors$ESTIMATE_PERCENTAGE)
)
average_random_sectors <- random_sectors %>%
group_by(NAICS_SECTOR) %>%
summarize(
AVERAGE_PERCENT = mean(ESTIMATE_PERCENTAGE)
)
# Load Packages
library("readxl")
library("ggplot2")
library("tidyverse")
# Load Dataset
sectors <- read_excel("/Users/Darshil/Documents/INFO201/info201-project/datasets/National_Sector_Dataset.xls")
# Convert Sector Numbers to Names
sectors$NAICS_SECTOR <- gsub(11, "Agriculture", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(21, "Mining", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(22, "Utilities", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(23, "Construction", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(31, "Manufacturing", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(42, "Wholesale Trade", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(44, "Retail Trade", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(48, "Transportation", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(51, "Information", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(52, "Finance", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(53, "Real Estate", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(54, "Professional Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(55, "Management", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(56, "Waste Management", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(61, "Educational Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(62, "Health Care", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(71, "Arts", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(72, "Food Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(81, "Other Services", sectors$NAICS_SECTOR)
# Filter to 5 randomly selected sectors
random_sectors <- sectors %>%
filter(NAICS_SECTOR == "Health Care" | NAICS_SECTOR == "Arts" |
NAICS_SECTOR == "Management" | NAICS_SECTOR == "Utilities" |
NAICS_SECTOR == "Other Services")
# Find average % in each sector
random_sectors$ESTIMATE_PERCENTAGE <- as.numeric(
gsub("[\\%,]", "", random_sectors$ESTIMATE_PERCENTAGE)
)
average_random_sectors <- random_sectors %>%
group_by(NAICS_SECTOR) %>%
summarize(
AVERAGE_PERCENT = mean(ESTIMATE_PERCENTAGE)
)
# Load Packages
library("readxl")
library("ggplot2")
library("tidyverse")
# Load Dataset
sectors <- read_excel("info201-project/datasets/National_Sector_Dataset.xls")
# Convert Sector Numbers to Names
sectors$NAICS_SECTOR <- gsub(11, "Agriculture", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(21, "Mining", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(22, "Utilities", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(23, "Construction", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(31, "Manufacturing", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(42, "Wholesale Trade", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(44, "Retail Trade", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(48, "Transportation", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(51, "Information", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(52, "Finance", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(53, "Real Estate", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(54, "Professional Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(55, "Management", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(56, "Waste Management", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(61, "Educational Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(62, "Health Care", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(71, "Arts", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(72, "Food Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(81, "Other Services", sectors$NAICS_SECTOR)
# Filter to 5 randomly selected sectors
random_sectors <- sectors %>%
filter(NAICS_SECTOR == "Health Care" | NAICS_SECTOR == "Arts" |
NAICS_SECTOR == "Management" | NAICS_SECTOR == "Utilities" |
NAICS_SECTOR == "Other Services")
# Find average % in each sector
random_sectors$ESTIMATE_PERCENTAGE <- as.numeric(
gsub("[\\%,]", "", random_sectors$ESTIMATE_PERCENTAGE)
)
average_random_sectors <- random_sectors %>%
group_by(NAICS_SECTOR) %>%
summarize(
AVERAGE_PERCENT = mean(ESTIMATE_PERCENTAGE)
)
# Load Packages
library("readxl")
library("ggplot2")
library("tidyverse")
# Load Dataset
sectors <- read_excel("info201-project/datasets/National_Sector_Dataset.xls")
# Convert Sector Numbers to Names
sectors$NAICS_SECTOR <- gsub(11, "Agriculture", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(21, "Mining", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(22, "Utilities", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(23, "Construction", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(31, "Manufacturing", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(42, "Wholesale Trade", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(44, "Retail Trade", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(48, "Transportation", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(51, "Information", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(52, "Finance", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(53, "Real Estate", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(54, "Professional Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(55, "Management", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(56, "Waste Management", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(61, "Educational Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(62, "Health Care", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(71, "Arts", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(72, "Food Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(81, "Other Services", sectors$NAICS_SECTOR)
# Filter to 5 randomly selected sectors
random_sectors <- sectors %>%
filter(NAICS_SECTOR == "Health Care" | NAICS_SECTOR == "Arts" |
NAICS_SECTOR == "Management" | NAICS_SECTOR == "Utilities" |
NAICS_SECTOR == "Other Services")
# Find average % in each sector
random_sectors$ESTIMATE_PERCENTAGE <- as.numeric(
gsub("[\\%,]", "", random_sectors$ESTIMATE_PERCENTAGE)
)
average_random_sectors <- random_sectors %>%
group_by(NAICS_SECTOR) %>%
summarize(
AVERAGE_PERCENT = mean(ESTIMATE_PERCENTAGE)
)
# Load Packages
library("readxl")
library("ggplot2")
library("tidyverse")
# Load Dataset
sectors <- read_excel("datasets/National_Sector_Dataset.xls")
# Convert Sector Numbers to Names
sectors$NAICS_SECTOR <- gsub(11, "Agriculture", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(21, "Mining", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(22, "Utilities", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(23, "Construction", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(31, "Manufacturing", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(42, "Wholesale Trade", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(44, "Retail Trade", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(48, "Transportation", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(51, "Information", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(52, "Finance", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(53, "Real Estate", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(54, "Professional Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(55, "Management", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(56, "Waste Management", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(61, "Educational Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(62, "Health Care", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(71, "Arts", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(72, "Food Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(81, "Other Services", sectors$NAICS_SECTOR)
# Filter to 5 randomly selected sectors
random_sectors <- sectors %>%
filter(NAICS_SECTOR == "Health Care" | NAICS_SECTOR == "Arts" |
NAICS_SECTOR == "Management" | NAICS_SECTOR == "Utilities" |
NAICS_SECTOR == "Other Services")
# Find average % in each sector
random_sectors$ESTIMATE_PERCENTAGE <- as.numeric(
gsub("[\\%,]", "", random_sectors$ESTIMATE_PERCENTAGE)
)
average_random_sectors <- random_sectors %>%
group_by(NAICS_SECTOR) %>%
summarize(
AVERAGE_PERCENT = mean(ESTIMATE_PERCENTAGE)
)
#Install packages
install.packages("ggplot2")
install.packages("ggplot2")
#Install packages
install.packages("ggplot2")
#Load packages
library("tidyverse")
library("ggplot2")
library("dplyr")
library("tidyr")
#Load dataset
sectors <- read.csv("https://raw.githubusercontent.com/darshils2001/info201-project/main/datasets/National_Sector_Dataset.csv")
# Convert Sector Numbers to Names
sectors$NAICS_SECTOR <- gsub(11, "Agriculture", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(21, "Mining", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(22, "Utilities", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(23, "Construction", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(31, "Manufacturing", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(42, "Wholesale Trade", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(44, "Retail Trade", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(48, "Transportation", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(51, "Information", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(52, "Finance", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(53, "Real Estate", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(54, "Professional Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(55, "Management", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(56, "Waste Management", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(61, "Educational Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(62, "Health Care", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(71, "Arts", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(72, "Food Services", sectors$NAICS_SECTOR)
sectors$NAICS_SECTOR <- gsub(81, "Other Services", sectors$NAICS_SECTOR)
#Convert EST PERCENTAGE from character to numeric type
sectors$ESTIMATE_PERCENTAGE <- as.numeric(
gsub("[\\%,]", "", sectors$ESTIMATE_PERCENTAGE)
)
#Build a box plot to compare variance across the sectors
ggplot(data = sectors) +
geom_boxplot(aes(x = NAICS_SECTOR, y = ESTIMATE_PERCENTAGE,
fill = "orange")) +
theme(axis.text.x = element_text(angle = 77, vjust = 0.5),
plot.title = element_text(hjust = 0.5)) +
labs(
title = "Percentage Revenue Changes in Each Sector
Week of October 04, 2020",
x = "Sector",
y = "Percent"
)
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
>>>>>>> Stashed changes
